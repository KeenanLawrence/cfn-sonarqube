{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template coordinates the running of the Sonarqube S3, IAM and EC2 templates.",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Child Template URLs"
          },
          "Parameters": [
            "BucketTemplate",
            "Ec2Template",
            "IamTemplate"
          ]
        },
        {
          "Label": {
            "default": "Application Info"
          },
          "Parameters": [
            "SonarSrcUrl",
            "SonarInitSetupUrl",
            "SonarAppSetupUrl",
            "SonarUser",
            "AppVolumeSize",
            "AppVolumeType",
            "AppVolumeDevice",
            "AppVolumeMountPath"
          ]
        },
        {
          "Label": {
            "default": "Instance Attributes"
          },
          "Parameters": [
            "Hostname",
            "Domainname",
            "AmiId",
            "InstanceType",
            "ProvisionUser",
            "KeyPairName",
            "AdminPubkeyURL",
            "NoPublicIp",
            "SecurityGroupIds",
            "SubnetIds",
            "NoReboot"
          ]
        },
        {
          "Label": {
            "default": "DB Connection Info"
          },
          "Parameters": [
            "SonarDbHost",
            "SonarDbInst",
            "SonarDbUser",
            "SonarDbPass"
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BucketTemplate": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Type": "String"
    },
    "Ec2Template": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Type": "String"
    },
    "IamTemplate": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Type": "String"
    },
    "SonarDbHost": {
      "Description": "FQDN of the Sonarqube database.",
      "Type": "String"
    },
    "SonarDbInst": {
      "Description": "Instance-name of the Sonarqube database.",
      "Type": "String"
    },
    "SonarDbPass": {
      "Description": "Password of the Sonarqube master database-user.",
      "Type": "String"
    },
    "SonarDbUser": {
      "Description": "Name of the Sonarqube master database-user.",
      "Type": "String"
    },
    "SonarAppSetupUrl": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Description": "URL of the Sonarqube setup script.",
      "Type": "String"
    },
    "SonarInitSetupUrl": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Description": "URL of the Sonarqube service setup script.",
      "Type": "String"
    },
    "SonarSrcUrl": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Description": "URL of the Sonarqube ZIP-bundle.",
      "Type": "String"
    },
    "SonarUser": {
      "Description": "Userid the Sonarqube service runs under.",
      "Default": "sonarqube",
      "Type": "String"
    },
    "AdminPubkeyURL": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Description": "URL the file containing the admin users' SSH public keys.",
      "Type": "String"
    },
    "AmiId": {
      "AllowedPattern": "^ami-[0-9a-z]{8}$|^ami-[0-9a-z]{17}$",
      "Description": "ID of the AMI to launch",
      "Type": "String"
    },
    "AppVolumeDevice": {
      "AllowedValues": [
        "",
        "/dev/xvdf",
        "/dev/xvdg",
        "/dev/xvdh",
        "/dev/xvdi",
        "/dev/xvdj"
      ],
      "Default": "",
      "Description": "Device to mount an extra EBS volume. Leave blank to launch without an extra application volume",
      "Type": "String"
    },
    "AppVolumeMountPath": {
      "AllowedPattern": "/.*",
      "Default": "/home/sonarqube",
      "Description": "Filesystem path to mount the extra app volume. Ignored if \"AppVolumeDevice\" is blank",
      "Type": "String"
    },
    "AppVolumeSize": {
      "ConstraintDescription": "Must be between 10GB and 16384GB.",
      "Default": "10",
      "Description": "Size in GB of the EBS volume to create. Ignored if \"AppVolumeDevice\" is blank",
      "MaxValue": "16384",
      "MinValue": "10",
      "Type": "Number"
    },
    "AppVolumeType": {
      "AllowedValues": [
        "gp2",
        "io1",
        "sc1",
        "st1",
        "standard"
      ],
      "Default": "gp2",
      "Description": "Type of EBS volume to create. Ignored if \"AppVolumeDevice\" is blank",
      "Type": "String"
    },
    "Domainname": {
      "ConstraintDescription": "An alphanumeric string to complete the domain portion of the instance's FQDN.",
      "Description": "Suffix for Sonarqube's hostname and DNS record",
      "Type": "String"
    },
    "Hostname": {
      "ConstraintDescription": "An alphanumeric string to complete the hostname portion of the instance's FQDN.",
      "Default": "sonarqube",
      "Description": "Node-name for Sonarqube's hostname and DNS record",
      "Type": "String"
    },
    "CfnEndpointUrl": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Default": "",
      "Description": "URL to the CloudFormation Endpoint. e.g. https://cloudformation.us-east-1.amazonaws.com",
      "Type": "String"
    },
    "EpelRepo": {
      "AllowedPattern": "^[a-z][a-z0-9-]*$",
      "ConstraintDescription": "An alphanumeric string that represents the EPEL yum repo's label.",
      "Default": "epel",
      "Description": "Name of network's EPEL repo.",
      "Type": "String"
    },
    "InstanceType": {
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "t2.xlarge",
        "t2.2xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "m4.16xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge"
      ],
      "Default": "t2.large",
      "Description": "Amazon EC2 instance type",
      "Type": "String"
    },
    "KeyPairName": {
      "Description": "Public/private key pairs allowing the provisioning-user to securely connect to the instance after it launches.",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "NoPublicIp": {
      "AllowedValues": [
        "false",
        "true"
      ],
      "Default": "true",
      "Description": "Controls whether to assign the instance a public IP. Recommended to leave at \"true\" _unless_ launching in a public subnet",
      "Type": "String"
    },
    "NoReboot": {
      "AllowedValues": [
        "false",
        "true"
      ],
      "Default": "false",
      "Description": "Controls whether to reboot the instance as the last step of cfn-init execution",
      "Type": "String"
    },
    "PipIndexFips": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Default": "https://pypi.org/simple/",
      "Description": "URL of pip index  that is compatible with FIPS 140-2 requirements.",
      "Type": "String"
    },
    "PipRpm": {
      "Default": "python2-pip",
      "Description": "Name of preferred pip RPM.",
      "Type": "String"
    },
    "ProvisionUser": {
      "AllowedPattern": "[a-z0-9]{6,12}+",
      "ConstraintDescription": "Alphanumeric string between 6 and 12 characters.",
      "Default": "sonarbuild",
      "Description": "Default login user account name.",
      "Type": "String"
    },
    "PyStache": {
      "Default": "pystache",
      "Description": "Name of preferred pystache RPM.",
      "Type": "String"
    },
    "SecurityGroupIds": {
      "Description": "List of security groups to apply to the instance(s)",
      "Type": "List<AWS::EC2::SecurityGroup::Id>"
    },
    "SubnetIds": {
      "Description": "Subnet to associate to the Instance",
      "Type": "AWS::EC2::Subnet::Id"
    }
  },
  "Resources": {
    "BackupBucketRes": {
      "Properties": {
        "TemplateURL": { "Ref": "BucketTemplate" },
        "TimeoutInMinutes": "10"
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "Ec2Res": {
      "DependsOn": "IamInstanceRes",
      "Properties": {
        "Parameters": {
          "AdminPubkeyURL": { "Ref": "AdminPubkeyURL" },
          "AmiId": { "Ref": "AmiId" },
          "AppVolumeDevice": { "Ref": "AppVolumeDevice" },
          "AppVolumeMountPath": { "Ref": "AppVolumeMountPath" },
          "AppVolumeSize": { "Ref": "AppVolumeSize" },
          "AppVolumeType": { "Ref": "AppVolumeType" },
          "BackupBucket": {
            "Fn::GetAtt": [ "BackupBucketRes", "Outputs.BucketName" ]
          },
          "CfnEndpointUrl": { "Ref": "CfnEndpointUrl" },
          "Domainname": { "Ref": "Domainname" },
          "EpelRepo": { "Ref": "EpelRepo" },
          "Hostname": { "Ref": "Hostname" },
          "InstanceProfile": {
            "Fn::GetAtt": [ "IamInstanceRes", "Outputs.InstanceRoleProfile" ]
          },
          "InstanceType": { "Ref": "InstanceType" },
          "KeyPairName": { "Ref": "KeyPairName" },
          "NoPublicIp": { "Ref": "NoPublicIp" },
          "NoReboot": { "Ref": "NoReboot" },
          "PipIndexFips": { "Ref": "PipIndexFips" },
          "PipRpm": { "Ref": "PipRpm" },
          "ProvisionUser": { "Ref": "ProvisionUser" },
          "PyStache": { "Ref": "PyStache" },
          "SecurityGroupIds": {
            "Fn::Join": [
              ",",
              { "Ref": "SecurityGroupIds" }
            ]
          },
          "SonarAppSetupUrl": { "Ref": "SonarAppSetupUrl" },
          "SonarDbHost": { "Ref": "SonarDbHost" },
          "SonarDbInst": { "Ref": "SonarDbInst" },
          "SonarDbPass": { "Ref": "SonarDbPass" },
          "SonarDbUser": { "Ref": "SonarDbUser" },
          "SonarInitSetupUrl": { "Ref": "SonarInitSetupUrl" },
          "SonarSrcUrl": { "Ref": "SonarSrcUrl" },
          "SonarUser": { "Ref": "SonarUser" },
          "SubnetIds": { "Ref": "SubnetIds" }
        },
        "TemplateURL": { "Ref": "Ec2Template" },
        "TimeoutInMinutes": "10"
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "IamInstanceRes": {
      "DependsOn": "BackupBucketRes",
      "Properties": {
        "Parameters": {
          "BackupBucket": {
            "Fn::GetAtt": [ "BackupBucketRes", "Outputs.BucketName" ]
          }
        },
        "TemplateURL": { "Ref": "IamTemplate" },
        "TimeoutInMinutes": "10"
      },
      "Type": "AWS::CloudFormation::Stack"
    }
  }
}
